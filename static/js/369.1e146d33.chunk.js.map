{"version":3,"file":"static/js/369.1e146d33.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","constants/initialState.js","constants/statuses.js","constants/searchParamsKey.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","service/movies-service.js","utils/toasts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: ${({ theme }) => theme.spacing * 4}px;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List } from './MoviesList.styled';\nimport { moviesPath } from 'constants/pathNames';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title = 'Unknown movie' }) => {\n        return (\n          <li key={id}>\n            <Link state={{ from: location }} to={`/${moviesPath}/${id}`}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import statuses from './statuses';\n\nconst initialState = {\n  movies: [],\n  movie: null,\n  cast: null,\n  status: statuses.idle,\n  reviews: [],\n};\n\nexport default initialState;\n","const statuses = {\n  idle: 'idle',\n  pending: 'pending',\n  resolved: 'resolved',\n  rejected: 'rejected',\n};\n\nexport default statuses;\n","const SEARCH_PARAMS_KEY = 'movieTitle';\n\nexport default SEARCH_PARAMS_KEY;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: ${({ theme }) => theme.spacing * 4}px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport SEARCH_PARAMS_KEY from 'constants/searchParamsKey';\nimport { Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmitForm, initialValue = '' }) => {\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmitForm)}>\n      <input defaultValue={initialValue} {...register(SEARCH_PARAMS_KEY)} />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n  initialValue: PropTypes.string,\n};\n\nexport default SearchForm;\n","import { useSearchParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport SearchForm from 'components/SearchForm';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\nimport initialState from 'constants/initialState';\nimport statuses from 'constants/statuses';\nimport SEARCH_PARAMS_KEY from 'constants/searchParamsKey';\nimport moviesServiceApi from 'service/movies-service';\nimport { errorToast, successToast } from 'utils/toasts';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(() => initialState.movies);\n  const [status, setStatus] = useState(() => initialState.status);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get(SEARCH_PARAMS_KEY);\n\n  const onSubmitForm = (data) => {\n    const moviesTitle = data[SEARCH_PARAMS_KEY].trim();\n    if (!moviesTitle) {\n      errorToast('Please, enter movie title');\n      return;\n    }\n    const searchQuery = moviesTitle.replace(/ +/g, ' ');\n    setSearchParams({\n      [SEARCH_PARAMS_KEY]: searchQuery,\n    });\n  };\n\n  useEffect(() => {\n    async function getMoviesByTitle(title) {\n      try {\n        setStatus(statuses.pending);\n        const { results } = await moviesServiceApi.fetchMoviesByTitle(title);\n        if (results.length) {\n          setMovies(results);\n          successToast('Movies uploaded');\n        }\n        setStatus(statuses.resolved);\n      } catch (error) {\n        errorToast('HTTP request failed');\n        setStatus(statuses.rejected);\n      }\n    }\n\n    searchQuery && getMoviesByTitle(searchQuery);\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchForm onSubmitForm={onSubmitForm} initialValue={searchQuery} />\n      {!!movies.length && <MoviesList movies={movies} />}\n      {!movies.length && status === statuses.resolved && (\n        <p>Movies not found</p>\n      )}\n      {status === statuses.pending && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n","class MoviesServiceApi {\n  #API_KEY = '2f4676f5b742582c83b7dc4456b7601c';\n  #BASE_URL = 'https://api.themoviedb.org/3';\n\n  fetchTrendingMovies() {\n    return fetch(\n      `${this.#BASE_URL}/trending/all/day?language=en-US&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMovieDetails(id) {\n    return fetch(\n      `${this.#BASE_URL}/movie/${id}?language=en-US&api_key=${this.#API_KEY}`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMovieCast(id) {\n    return fetch(\n      `${this.#BASE_URL}/movie/${id}/credits?language=en-US&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMovieReviews(id) {\n    return fetch(\n      `${this.#BASE_URL}/movie/${id}/reviews?language=en-US&page=1&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMoviesByTitle(title) {\n    return fetch(\n      `${\n        this.#BASE_URL\n      }/search/movie?query=${title}&include_adult=false&language=en-US&page=1&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n}\n\nconst moviesServiceApi = new MoviesServiceApi();\n\nexport default moviesServiceApi;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst errorToast = (message) => {\n  toast.error(message);\n};\n\nconst successToast = (message) => {\n  toast.success(message);\n};\n\nexport { errorToast, successToast };\n"],"names":["List","styled","theme","spacing","movies","location","useLocation","map","id","title","state","from","to","moviesPath","initialState","movie","cast","status","statuses","reviews","idle","pending","resolved","rejected","Form","onSubmitForm","initialValue","useForm","register","handleSubmit","onSubmit","defaultValue","SEARCH_PARAMS_KEY","type","useState","setMovies","setStatus","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","moviesServiceApi","results","length","successToast","errorToast","getMoviesByTitle","data","moviesTitle","trim","replace","MoviesList","Loader","MoviesServiceApi","fetch","this","then","response","ok","Error","json","message","toast"],"sourceRoot":""}