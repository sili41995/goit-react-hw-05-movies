{"version":3,"file":"static/js/191.7c987c21.chunk.js","mappings":"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","sources":["constants/initialState.js","constants/statuses.js","components/GoBackLink/GoBackLink.styled.js","components/GoBackLink/GoBackLink.jsx","utils/getMovieDetail.js","components/MovieDetailSection/MovieDetailSection.styled.js","components/MovieDetailSection/MovieDetailSection.jsx","pages/MovieDetails.jsx","service/movies-service.js","utils/getImagePath.js","utils/toasts.js"],"sourcesContent":["import statuses from './statuses';\n\nconst initialState = {\n  movies: [],\n  movie: null,\n  cast: null,\n  status: statuses.idle,\n  reviews: [],\n};\n\nexport default initialState;\n","const statuses = {\n  idle: 'idle',\n  pending: 'pending',\n  resolved: 'resolved',\n  rejected: 'rejected',\n};\n\nexport default statuses;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const GoBack = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${({ theme }) => theme.spacing * 3}px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  padding: ${({ theme }) => theme.spacing * 3}px;\n  min-width: 150px;\n  margin-bottom: ${({ theme }) => theme.spacing * 4}px;\n  text-decoration: none;\n  color: inherit;\n`;\n","import React from 'react';\nimport { RiArrowGoBackFill } from 'react-icons/ri';\nimport PropTypes from 'prop-types';\nimport { GoBack } from './GoBackLink.styled';\n\nconst GoBackLink = ({ link }) => {\n  return (\n    <GoBack to={link}>\n      <RiArrowGoBackFill /> Go back\n    </GoBack>\n  );\n};\n\nGoBackLink.propTypes = {\n  link: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      state: PropTypes.shape({\n        from: PropTypes.object.isRequired,\n      }),\n    }),\n  ]),\n};\n\nexport default GoBackLink;\n","import getImagePath from 'utils/getImagePath';\nimport defaultMoviePoster from 'components/default-movie-poster.jpg';\n\nconst getMovieDetail = (movie) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n  const posterPath = poster_path\n    ? getImagePath(poster_path)\n    : defaultMoviePoster;\n  const fullYear = new Date(release_date).getFullYear();\n  const userScore = Math.round(vote_average * 10);\n  const movieGenres = genres.map(({ name }) => name).join(', ');\n\n  return { posterPath, fullYear, userScore, movieGenres, title, overview };\n};\n\nexport default getMovieDetail;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  width: 300px;\n`;\n\nexport const Movie = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing * 8}px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${({ theme }) => theme.spacing * 4}px;\n`;\n\nexport const Text = styled.p``;\n\nexport const Subtitle = styled.h3`\n  margin-top: ${({ theme }) => theme.spacing * 4}px;\n  margin-bottom: ${({ theme }) => theme.spacing * 4}px;\n`;\n\nexport const Info = styled.div`\n  margin-top: ${({ theme }) => theme.spacing * 4}px;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: ${({ theme }) => theme.spacing * 4}px;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: ${({ theme }) => theme.spacing * 4}px;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport getMovieDetail from 'utils/getMovieDetail';\nimport {\n  Image,\n  Info,\n  List,\n  ListItem,\n  Movie,\n  Subtitle,\n  Text,\n  Title,\n} from './MovieDetailSection.styled';\n\nconst MovieDetailSection = ({ movie }) => {\n  const { posterPath, fullYear, userScore, movieGenres, title, overview } =\n    getMovieDetail(movie);\n\n  return (\n    <>\n      <Movie>\n        <Image src={posterPath} alt=\"\" />\n        <div>\n          <Title>{`${title} (${fullYear})`} </Title>\n          <Text>User Score: {userScore}%</Text>\n          <Subtitle>Overview</Subtitle>\n          <Text>{overview}</Text>\n          <Subtitle>Genres</Subtitle>\n          <Text>{movieGenres}</Text>\n        </div>\n      </Movie>\n      <Info>\n        <Text>Additional information</Text>\n        <List>\n          <ListItem>\n            <Link to=\"cast\">Cast</Link>\n          </ListItem>\n          <ListItem>\n            <Link to=\"reviews\">Reviews</Link>\n          </ListItem>\n        </List>\n      </Info>\n    </>\n  );\n};\n\nMovieDetailSection.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetailSection;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport React, { Suspense, useEffect, useRef, useState } from 'react';\nimport GoBackLink from 'components/GoBackLink';\nimport Loader from 'components/Loader';\nimport MovieDetailSection from 'components/MovieDetailSection';\nimport initialState from 'constants/initialState';\nimport { dynamicParam, homePath } from 'constants/pathNames';\nimport statuses from 'constants/statuses';\nimport moviesServiceApi from 'service/movies-service';\nimport { errorToast, successToast } from 'utils/toasts';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(() => initialState.movie);\n  const [status, setStatus] = useState(() => initialState.status);\n\n  const params = useParams();\n  const movieId = params[dynamicParam];\n  const location = useLocation();\n  const { current: prevPathname } = useRef(location.state?.from);\n  const goBackLink = prevPathname ? prevPathname : homePath;\n\n  useEffect(() => {\n    async function getMovieDetails(id) {\n      try {\n        setStatus(statuses.pending);\n        const movie = await moviesServiceApi.fetchMovieDetails(id);\n        setMovie(movie);\n        successToast('Movie uploaded');\n        setStatus(statuses.resolved);\n      } catch (error) {\n        errorToast('HTTP request failed');\n        setStatus(statuses.rejected);\n      }\n    }\n\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackLink link={goBackLink} />\n      {movie && <MovieDetailSection movie={movie} />}\n      {status === statuses.pending && <Loader />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","class MoviesServiceApi {\n  #API_KEY = '2f4676f5b742582c83b7dc4456b7601c';\n  #BASE_URL = 'https://api.themoviedb.org/3';\n\n  fetchTrendingMovies() {\n    return fetch(\n      `${this.#BASE_URL}/trending/all/day?language=en-US&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMovieDetails(id) {\n    return fetch(\n      `${this.#BASE_URL}/movie/${id}?language=en-US&api_key=${this.#API_KEY}`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMovieCast(id) {\n    return fetch(\n      `${this.#BASE_URL}/movie/${id}/credits?language=en-US&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMovieReviews(id) {\n    return fetch(\n      `${this.#BASE_URL}/movie/${id}/reviews?language=en-US&page=1&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n\n  fetchMoviesByTitle(title) {\n    return fetch(\n      `${\n        this.#BASE_URL\n      }/search/movie?query=${title}&include_adult=false&language=en-US&page=1&api_key=${\n        this.#API_KEY\n      }`\n    ).then((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n  }\n}\n\nconst moviesServiceApi = new MoviesServiceApi();\n\nexport default moviesServiceApi;\n","const getImagePath = (path) => `https://image.tmdb.org/t/p/original${path}`;\n\nexport default getImagePath;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst errorToast = (message) => {\n  toast.error(message);\n};\n\nconst successToast = (message) => {\n  toast.success(message);\n};\n\nexport { errorToast, successToast };\n"],"names":["initialState","movies","movie","cast","status","statuses","reviews","idle","pending","resolved","rejected","GoBack","styled","Link","theme","spacing","link","to","poster_path","title","release_date","vote_average","overview","genres","posterPath","getImagePath","defaultMoviePoster","fullYear","Date","getFullYear","userScore","Math","round","movieGenres","map","name","join","Image","Movie","Title","Text","Subtitle","Info","List","ListItem","getMovieDetail","src","alt","useState","setMovie","setStatus","movieId","useParams","dynamicParam","location","useLocation","prevPathname","useRef","state","from","current","goBackLink","homePath","useEffect","id","moviesServiceApi","successToast","errorToast","getMovieDetails","Loader","Suspense","fallback","MoviesServiceApi","fetch","this","then","response","ok","Error","json","path","message","toast"],"sourceRoot":""}